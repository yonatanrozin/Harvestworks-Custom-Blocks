{"version":3,"file":"event-calendar/view.js","mappings":"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","sources":["webpack://harvestworks/./src/event-calendar/view.js"],"sourcesContent":["/* eslint-disable no-console */\r\n\r\nconst debug = true;\r\n\r\n\r\n// Utils\r\nfunction dateToStr(date) {\r\n    return date.toISOString().split(\"T\")[0].split(\"-\").join(\"\");\r\n}\r\n\r\nfunction strToDate(str) {\r\n    const year = str.substring(0, 4);\r\n    const month = str.substring(4, 6);\r\n    const day = str.substring(6, 8);\r\n    return new Date(year, month - 1, day);\r\n}\r\n\r\nfunction offsetOfMonth(dateStr) {\r\n    const year = dateStr.substring(0, 4);\r\n    const month = dateStr.substring(4, 6) - 1;\r\n    return new Date(year, month, 1).getDay() + 1;\r\n}\r\n\r\nfunction daysInMonth(dateStr) {\r\n    const year = dateStr.substring(0, 4);\r\n    const month = dateStr.substring(4, 6) - 1;\r\n    return new Date(year, month + 1, 0).getDate();\r\n}\r\n\r\n// Session storage\r\nfunction getURLDateStr() {\r\n    const url = new URL(window.location.href);\r\n    const param = url.searchParams.get(\"date\");\r\n    if (!param || param.length != 8) return dateToStr(new Date());\r\n\r\n    try { // Check if the date is valid integer\r\n        parseInt(param);\r\n    } catch (e) {\r\n        return dateToStr(new Date());\r\n    }\r\n\r\n    return param;\r\n}\r\n\r\nfunction setURLDateStr(dateStr) {\r\n    if (debug) console.log(\"Saving date to URL & storage:\", dateStr);\r\n    const url = new URL(window.location.href);\r\n    url.searchParams.set(\"date\", dateStr);\r\n    history.pushState({}, \"\", url);\r\n    window.sessionStorage.setItem(\"hw_calendar_date\", dateStr);\r\n    window.dispatchEvent(new PopStateEvent(\"popstate\"));\r\n}\r\n\r\n// Document elements\r\nconst dayCells = document.querySelectorAll(\".calendar_day\");\r\n\r\nfunction initializeCalendar() {\r\n    const dateStr = getURLDateStr();\r\n    if (debug) console.log(\"Initializing calendar on date:\", dateStr);\r\n    setMonth(dateStr);\r\n    setDay(dateStr);\r\n}\r\n\r\n// Switch the calendar to a certain month in a certain year\r\nfunction setMonth(dayStr) {\r\n    const date = strToDate(dayStr);\r\n\r\n    // Offset the first cell based on month\r\n    document.querySelector(\".calendar_day\").style.gridColumnStart = offsetOfMonth(dayStr);\r\n    document.querySelector(\"#calendar_date h3\").innerHTML = date.toLocaleString(\"default\", { month: \"short\" }) + \" \" + date.toLocaleString(\"default\", { year: \"numeric\" });\r\n\r\n    for (const dayCell of dayCells) {\r\n        const cellDay = Number(dayCell.id);\r\n        const cellDayStr = dayCell.id.padStart(2, \"0\");\r\n        const cellDateStr = dayStr.substring(0, 6) + cellDayStr;\r\n\r\n        // Hide cells that are beyond the month\r\n        if (cellDay > daysInMonth(dayStr)) {\r\n            dayCell.style.display = \"none\";\r\n            continue;\r\n        }\r\n\r\n        // Reset cell indicators\r\n        dayCell.style.display = \"flex\";\r\n        dayCell.classList.remove(\"queried\");\r\n        dayCell.classList.remove(\"has_event\");\r\n\r\n        // Make cells interactive as their new day\r\n        dayCell.onclick = () => setDay(cellDateStr);\r\n    }\r\n\r\n    // Fetch events for the month\r\n    fetch(\"/wp-json/wp/v2/month?date=\" + dayStr)\r\n        .then(res => res.json())\r\n        .then(events => renderEventDays(dayStr, events));\r\n\r\n    // Update the month navigation buttons\r\n    document.getElementById(\"nextMonthButton\").onclick = () => nextMonth(dayStr);\r\n    document.getElementById(\"prevMonthButton\").onclick = () => prevMonth(dayStr);\r\n}\r\n\r\n// Highlight the days that have events, once the events are fetched\r\nfunction renderEventDays(dayStr, events) {\r\n    if (!Array.isArray(events)) return console.log('Invalid events data:', events);\r\n    if (events.length === 0) return console.log('No events for the month.');\r\n    if (debug) console.log('Rendering events for month:', dayStr, events);\r\n\r\n    for (const dayCell of dayCells) {\r\n        const cellDayStr = dayCell.id.padStart(2, \"0\");\r\n        const cellDateStr = dayStr.substring(0, 6) + cellDayStr;\r\n\r\n        const ongoingEvents = events.filter(event => {\r\n            const eventDay = event.acf.date;\r\n            let eventEndDay = event.acf.end_date;\r\n            if (!eventDay) return false;\r\n            if (!eventEndDay || eventEndDay.length === 0) eventEndDay = eventDay;\r\n            try {\r\n                const match = parseInt(cellDateStr) >= parseInt(eventDay) && parseInt(cellDateStr) <= parseInt(eventEndDay);\r\n                // if (debug && match) console.log('Event match for ' + cellDateStr + ' : ' + eventDay + ' -> ' +eventEndDay + ' (' + event.post_title + ')');\r\n                return match;\r\n            } catch (e) {\r\n                return false;\r\n            }\r\n        });\r\n\r\n        // if (debug) console.log(cellDateStr + ' events:', ongoingEvents);\r\n\r\n        if (ongoingEvents.length > 0) {\r\n            dayCell.classList.add(\"has_event\");\r\n        } else {\r\n            dayCell.classList.remove(\"has_event\");\r\n        }\r\n    }\r\n}\r\n\r\n// Switch the calendar to a certain day\r\nfunction setDay(dayStr) {\r\n    if (debug) console.log(\"Setting calendar to day:\", dayStr);\r\n    // Update the URL and session storage\r\n    setURLDateStr(dayStr);\r\n\r\n    // Highlight the selected day\r\n    for (const dayCell of dayCells) {\r\n        const cellDayStr = dayCell.id.padStart(2, \"0\");\r\n        const cellDateStr = dayStr.substring(0, 6) + cellDayStr;\r\n\r\n        if (cellDateStr === dayStr) {\r\n            dayCell.classList.add(\"queried\");\r\n        } else {\r\n            dayCell.classList.remove(\"queried\");\r\n        }\r\n    }\r\n}\r\n\r\n// Navigate to the next or previous month\r\nfunction nextMonth(dayStr) {\r\n    if (debug) console.log(\"Navigating to next month from:\", dayStr);\r\n    const date = strToDate(dayStr);\r\n    const newDate = new Date(date.getFullYear(), date.getMonth() + 1, 1);\r\n    const newDateStr = dateToStr(newDate);\r\n\r\n    setMonth(newDateStr);\r\n    setDay(newDateStr);\r\n}\r\n\r\nfunction prevMonth(dayStr) {\r\n    if (debug) console.log(\"Navigating to previous month from:\", dayStr);\r\n    const date = strToDate(dayStr);\r\n    const newDate = new Date(date.getFullYear(), date.getMonth() - 1, 1);\r\n    const newDateStr = dateToStr(newDate);\r\n\r\n    setMonth(newDateStr);\r\n    setDay(newDateStr);\r\n}\r\n\r\n\r\ninitializeCalendar();\r\n\r\n\r\n"],"names":["debug","dateToStr","date","toISOString","split","join","strToDate","str","year","substring","month","day","Date","offsetOfMonth","dateStr","getDay","daysInMonth","getDate","getURLDateStr","url","URL","window","location","href","param","searchParams","get","length","parseInt","e","setURLDateStr","console","log","set","history","pushState","sessionStorage","setItem","dispatchEvent","PopStateEvent","dayCells","document","querySelectorAll","initializeCalendar","setMonth","setDay","dayStr","querySelector","style","gridColumnStart","innerHTML","toLocaleString","dayCell","cellDay","Number","id","cellDayStr","padStart","cellDateStr","display","classList","remove","onclick","fetch","then","res","json","events","renderEventDays","getElementById","nextMonth","prevMonth","Array","isArray","ongoingEvents","filter","event","eventDay","acf","eventEndDay","end_date","match","add","newDate","getFullYear","getMonth","newDateStr"],"sourceRoot":""}