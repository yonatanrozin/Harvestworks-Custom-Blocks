{"version":3,"file":"event-list/view.js","mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,MAAMA,SAAS,GAAGC,QAAQ,CAACC,aAAa,CAAC,mCAAmC,CAAC;AAE7E,SAASC,gBAAgBA,CAACC,IAAI,EAAE;EAC5B,IAAI,CAACA,IAAI,EAAE,OAAO,IAAI;EACtB,MAAMC,IAAI,GAAGD,IAAI,CAACE,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC;EACjC,MAAMC,KAAK,GAAGH,IAAI,CAACE,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;EACxC,MAAME,GAAG,GAAGJ,IAAI,CAACE,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC;EAChC,OAAO,IAAIG,IAAI,CAACJ,IAAI,EAAEE,KAAK,EAAEC,GAAG,CAAC,CAACE,cAAc,CAAC,SAAS,EAAE;IAAC,OAAO,EAAE,OAAO;IAAE,KAAK,EAAE;EAAS,CAAC,CAAC;AAErG;AAEA,SAASC,SAASA,CAACC,KAAK,EAAE;EAEtB,MAAM;IAACC,UAAU;IAAEC,GAAG;IAAEC,cAAc;IAAEC,YAAY;IAAEC,IAAI;IAAEC;EAAM,CAAC,GAAGN,KAAK;EAC3E,MAAM;IAACR,IAAI;IAAEe,QAAQ;IAAEC,QAAQ;IAAEC,UAAU;IAAEC;EAAO,CAAC,GAAGR,GAAG;EAE3DS,OAAO,CAACC,GAAG,CAACZ,KAAK,CAAC;EAElB,OAAO;AACX;AACA,kEAAkEG,cAAc;AAChF,kBAAkBG,MAAM,GAAG,8BAA8BA,MAAM,SAAS,GAAG,EAAE;AAC7E;AACA;AACA;AACA;AACA,gCAAgCf,gBAAgB,CAACC,IAAI,CAAC;AACtD,0BAA0Be,QAAQ,GAAG,mCAAmChB,gBAAgB,CAACgB,QAAQ,CAAC,SAAS,GAAG,EAAE;AAChH;AACA;AACA,+CAA+CE,UAAU,CAAC,CAAC,CAAC,CAACI,IAAI;AACjE;AACA,mDAAmDL,QAAQ;AAC3D;AACA,2BAA2BH,IAAI;AAC/B;AACA,oDAAoDJ,UAAU;AAC9D,0BAA0BS,OAAO,GAAG,kCAAkCA,OAAO,SAAS,GAAG,EAAE;AAC3F;AACA;AACA,+CAA+CN,YAAY;AAC3D;AACA;AACA,KAAK;AACL;AAEA,eAAeU,SAASA,CAAA,EAAG;EAEvB,IAAIC,SAAS,GAAG,IAAIC,GAAG,CAACC,MAAM,CAACT,QAAQ,CAACU,IAAI,CAAC,CAACC,YAAY,CAACC,GAAG,CAAC,MAAM,CAAC;EACtE,MAAMC,QAAQ,GAAG,wBAAwBN,SAAS,GAAG,SAASA,SAAS,EAAE,GAAG,EAAE,EAAE;EAEhF,MAAMO,MAAM,GAAG,MAAM,CAAC,MAAMC,KAAK,CAACF,QAAQ,CAAC,EAAEG,IAAI,CAAC,CAAC;EACnDpC,SAAS,CAACqC,SAAS,GAAGH,MAAM,CAACI,GAAG,CAACC,CAAC,IAAI5B,SAAS,CAAC4B,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,EAAE,CAAC;AAChE;AAEAvC,QAAQ,CAACwC,gBAAgB,CAAC,kBAAkB,EAAEf,SAAS,CAAC;AACxDG,MAAM,CAACY,gBAAgB,CAAC,UAAU,EAAEf,SAAS,CAAC;;AAE9C,8B","sources":["webpack://harvestworks/./src/event-list/view.js"],"sourcesContent":["/**\r\n * Use this file for JavaScript code that you want to run in the front-end\r\n * on posts/pages that contain this block.\r\n *\r\n * When this file is defined as the value of the `viewScript` property\r\n * in `block.json` it will be enqueued on the front end of the site.\r\n *\r\n * Example:\r\n *\r\n * ```js\r\n * {\r\n *   \"viewScript\": \"file:./view.js\"\r\n * }\r\n * ```\r\n *\r\n * If you're not making any changes to this file because your project doesn't need any\r\n * JavaScript running in the front-end, then you should delete this file and remove\r\n * the `viewScript` property from `block.json`.\r\n *\r\n * @see https://developer.wordpress.org/block-editor/reference-guides/block-api/block-metadata/#view-script\r\n */\r\n\r\n/* eslint-disable no-console */\r\n\r\nconst block_div = document.querySelector(\".wp-block-harvestworks-event-list\");\r\n\r\nfunction dateFromACFField(date) {\r\n    if (!date) return null;\r\n    const year = date.substring(0, 4);\r\n    const month = date.substring(4, 6) - 1; //JS months counting from 0\r\n    const day = date.substring(6, 8);\r\n    return new Date(year, month, day).toLocaleString('default', {\"month\": \"short\", \"day\": \"2-digit\"}); \r\n\r\n}\r\n\r\nfunction eventCard(event) {\r\n\r\n    const {post_title, acf, featured_image, post_excerpt, guid, status} = event;\r\n    const {date, end_date, location, event_type, artists} = acf;\r\n\r\n    console.log(event);\r\n\r\n    return `\r\n        <div class=\"event_card\">\r\n            <div class=\"event_img\" style=\"background-image: url(${featured_image})\" >\r\n                ${status ? `<span class=\"event_status\">${status}</span>` : \"\"}\r\n            </div>\r\n            <div class=\"event_info\">\r\n                <div class=\"event_details\" >\r\n                    <span class=\"event_dates\">\r\n                        <span>${dateFromACFField(date)}</span>\r\n                        ${end_date ? `<span>&nbsp;—&nbsp;</span><span>${dateFromACFField(end_date)}</span>` : \"\"}\r\n                    </span>\r\n                    <span>•</span>\r\n                    <span class=\"event_type\">${event_type[0].name}</span>\r\n                    <span>•</span>\r\n                    <span class=\"event_location\">${location}</span>\r\n                </div>\r\n                <a href=\"${guid}\">\r\n                    <h2 class=\"event_name\">\r\n                        <span class=\"event_title\">${post_title}</span>\r\n                        ${artists ? `<span class=\"event_artists\">by ${artists}</span>` : \"\"}\r\n                    </h2>\r\n                </a>\r\n                <p class=\"event_description\">${post_excerpt}</p>\r\n            </div>\r\n        </div>\r\n    `;\r\n}\r\n            \r\nasync function getEvents() {\r\n\r\n    let dateparam = new URL(window.location.href).searchParams.get(\"date\");\r\n    const queryURL = `/wp-json/wp/v2/events${dateparam ? `?date=${dateparam}` : \"\"}`;\r\n    \r\n    const events = await (await fetch(queryURL)).json();\r\n    block_div.innerHTML = events.map(e => eventCard(e)).join(\"\");\r\n}\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", getEvents);\r\nwindow.addEventListener(\"popstate\", getEvents);\r\n\r\n/* eslint-enable no-console */\r\n"],"names":["block_div","document","querySelector","dateFromACFField","date","year","substring","month","day","Date","toLocaleString","eventCard","event","post_title","acf","featured_image","post_excerpt","guid","status","end_date","location","event_type","artists","console","log","name","getEvents","dateparam","URL","window","href","searchParams","get","queryURL","events","fetch","json","innerHTML","map","e","join","addEventListener"],"sourceRoot":""}